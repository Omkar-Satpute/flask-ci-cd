name: Flask CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: ghcr.io/omkar-satpute/flask-app
  KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        pytest

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}  
        password: ${{ secrets.CR_PAT }}

    - name: Build and push Docker image
      run: |
        docker build -t $IMAGE_NAME .
        docker tag $IMAGE_NAME $IMAGE_NAME:${{ github.sha }}
        docker tag $IMAGE_NAME $IMAGE_NAME:latest
        docker push $IMAGE_NAME:${{ github.sha }}
        docker push $IMAGE_NAME:latest

    deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v2

    - name: Install kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'v1.22.0'

    - name: Set Kubernetes context using azure/k8s-set-context
      uses: azure/k8s-set-context@v3
      with:
        method: kubeconfig
        kubeconfig: ${{ secrets.KUBE_CONFIG }}

    - name: Configure Kubernetes
      run: |
        mkdir -p ~/.kube
        echo "$KUBE_CONFIG" > ~/.kube/config
        kubectl version --client

    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f .github/workflows/k8s-deployment.yml
        kubectl rollout status deployment/flask-app
        kubectl get services
